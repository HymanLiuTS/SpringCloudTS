spring:
  application:
    name: account-service
  cloud:
    config:
      #采用url形式访问
      #uri: http://127.0.0.1:8089
      profile: prod
      enabled: true
      #采用服务发现访问
      discovery:
        enabled: true
        service-id: config-server
#label从git方式的配置服务器获取配置时用到，表示git的分支
      label: main
    stream:
      bindings:
        greetingChannel:
          #这个是交换机名称+
          destination: orgChangeTopic
          content-type: application/json
          consumer:
            #消费重试的次数，如果在处理消息的过程中出现异常，重试的次数
            max-attempts: 1
            #手动确认消息模式
            acknowledge-mode: manual
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

eureka:
  instance:
    #将服务的ip地址而非服务所在的主机名注册到eureka
    preferIpAddress: true
    #metadata-map是定义eruka的元数据，通过自定义的元数据lancher可以进行灰度部署
    metadata-map:
      lancher: 1
  client:
    #通过euraka注册服务
    registerWithEureka: true
    #在服务中构建其他服务实例的地址缓存，从而防止每次都要向eureka询问ip地址
    #每隔30秒服务会更新一次缓存
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:18088/eureka/




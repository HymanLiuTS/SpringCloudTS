server:
  port: 8086
#通过调整日志的级别，打印map的url信息
logging:
  level:
    org:
      springframework:
        web:
          servlet:
            mvc:
              method:
                annotation:
                  RequestMappingHandlerMapping: trace

management:
  endpoints:
    web:
      exposure:
        # 这里用* 代表暴露所有端点只是为了观察效果，实际中按照需进行端点暴露
        include: "*"
  endpoint:
    health:
      # 详细信息显示给所有用户。
      show-details: always
  health:
    status:
      http-mapping:
        # 自定义健康检查返回状态码对应的 http 状态码
        FATAL:  503

zuul:
  #添加前缀，访问的路由前面必须加上改前缀
  prefix: /api
  #忽略自动方式映射的动态路由，如果忽略全部，使用'*'
  ignored-services: 'license-service'
  routes:
    #通过手动方式映射动态路由
    account-service: /account/**
    licensestatic:
      path: /license-static/**
      #手动映射静态路由，这里无法使用ribbion进行负载均衡
      #url: http://127.0.0.1:8090/
      #定义serviceid，后面ribbon使用这个serviceid，可以进行负载均衡
      serviceId: license-static

#设置静态路由的负载均衡，需要关闭eureka，关闭后还是可以通过eruka进行自动和手动路由的设置，
#但是ribbon不会再缓存各个服务的地址，加大eruka压力
ribbon:
  eureka:
    enabled: true

#使用ribbon进行负载均衡
license-static:
  ribbon:
    listOfServers: http://127.0.0.1:8090/

#配置通过Zuul运行的服务的Hystrix超时2.5s，如果设置某个服务的，可以将下面的default换成对应的服务名称
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2500
    account-service:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 7000

account-service:
  ribbon:
    ReadTimeout: 7000